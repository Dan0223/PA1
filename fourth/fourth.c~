#include <stdlib.h>
#include <stdio.h>
double** Matrix(int row, int col) {
    double** matrix = (double**)malloc(sizeof(double*) * row);
    int i, j;
    for (i = 0; i < row; i++) {
      matrix[i] = (double*)malloc(sizeof(double) * col);
    }    
    for (i = 0; i < row; i++) {
        for (j = 0; j < col; j++) {   
    matrix[i][j] = 0;
	}
    }
    return matrix;
}
void PrintMatrix(double** matrix, int row, int col) {
    int i, j;
    for (i = 0; i < row; i++) {
        for (j = 0; j < col; j++) {
            printf("%f ", matrix[i][j]);
        }
        printf("\n");
    }
}
void ReadMatrix(double** matrix, int row, int col, FILE* fp) {
  int i, j,r ;
  float num;
   for(i = 0; i < row; i++) {
        for (j = 0; j < col; j++) {
            r = fscanf(fp, " %lf ", &num);
	   
	    printf("num:%lf\n",num);
 printf("%d\n",r);
	 
	    if (r == EOF||r!=1) {
	  printf("end");   
	  return;
            }
            matrix[i][j] = num;
        }
    }
}
void popY(double** Y,double** X,int xrow, int xcol){
  int x; 
  int y;
  for (x=0; x<xrow;x++){
    for(y=0;y<xcol;y++){
      if(xcol==0){
	Y[x][0]=X[x][y]; 
	X[x][0]=1;
      }
    }
  }
}

int main(int argc, char** argv){
 FILE * fptr = fopen(argv[1],"r");
 int row, col,r; 
 r= fscanf(fptr," %d %d ",&col,&row);
 printf("row:%d, col:%d\n ",row,col);
   if (r == EOF || r != 2) {
                return 0;
            }
 double** X=Matrix(row,col+1); 
 double** Y=Matrix(row,1);

 ReadMatrix(X,row,col+1,fptr);
 popY(Y,X,row,col+1);
 PrintMatrix(X,row,col+1) ;
 // PrintMatrix(Y,row,1);
//FILE* fptr2 = fopen(argv[2],"r"); 
 fclose(fptr);
 return 0;


}
